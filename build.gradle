buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.reporting'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	jcenter()
}


ext {
	springCloudVersion = 'Finchley.M9'
}

dependencies {
//    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.0.2.RELEASE'

	compile(':com.reporting.mocks.model')
	compile(':com.reporting.kafka.serialization')
	//compile project: ':com.reporting.mocks.model'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.cloud:spring-cloud-starter-openfeign')
	compile('org.springframework.kafka:spring-kafka')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	compile('cz.jirutka.spring:embedmongo-spring')
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
